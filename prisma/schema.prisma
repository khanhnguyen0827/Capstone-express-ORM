generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model comments {
  comment_id   Int       @id @default(autoincrement())
  user_id      Int?
  image_id     Int?
  content      String    @db.Text
  commented_at DateTime? @default(now()) @db.Timestamp(0)
  users        users?    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_1")
  images       images?   @relation(fields: [image_id], references: [image_id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_2")

  @@index([image_id], map: "idx_comment_image")
  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model images {
  image_id     Int            @id @default(autoincrement())
  image_name   String         @db.VarChar(255)
  path         String         @db.VarChar(255)
  description  String?        @db.Text
  user_id      Int?
  created_at   DateTime?      @default(now()) @db.Timestamp(0)
  comments     comments[]
  users        users?         @relation(fields: [user_id], references: [user_id], onUpdate: NoAction, map: "images_ibfk_1")
  saved_images saved_images[]

  @@index([image_name], map: "idx_image_name")
  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saved_images {
  user_id  Int
  image_id Int
  saved_at DateTime? @default(now()) @db.Timestamp(0)
  users    users     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "saved_images_ibfk_1")
  images   images    @relation(fields: [image_id], references: [image_id], onDelete: Cascade, onUpdate: NoAction, map: "saved_images_ibfk_2")

  @@id([user_id, image_id])
  @@index([image_id], map: "idx_saved_image")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  user_id       Int            @id @default(autoincrement())
  email         String         @unique(map: "email") @db.VarChar(255)
  password_hash String         @db.VarChar(255)
  full_name     String?        @db.VarChar(100)
  age           Int?
  avatar        String?        @db.VarChar(255)
  created_at    DateTime?      @default(now()) @db.Timestamp(0)
  comments      comments[]
  images        images[]
  saved_images  saved_images[]
}
